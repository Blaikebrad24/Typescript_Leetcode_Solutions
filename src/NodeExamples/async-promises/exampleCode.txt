import fs from 'fs';
import axios from 'axios';

// Function to read a lengthy file asynchronously
function readFileAsync(filePath: string): Promise<string> {
    return new Promise((resolve, reject) => {
        fs.readFile(filePath, 'utf8', (err, data) => {
            if (err) {
                reject(err);
            } else {
                resolve(data);
            }
        });
    });
}

// Function to make a network request asynchronously
function makeNetworkRequestAsync(url: string): Promise<any> {
    return axios.get(url)
        .then(response => response.data)
        .catch(error => {
            throw error;
        });
}

// Example usage with async/await
async function processFileAndRequest() {
    try {
        const fileData = await readFileAsync('example.txt');
        console.log('File data:', fileData);
        
        const responseData = await makeNetworkRequestAsync('https://api.example.com/data');
        console.log('Network response:', responseData);
    } catch (error) {
        console.error('Error:', error);
    }
}

// Call the async function
processFileAndRequest();
